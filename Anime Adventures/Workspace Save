local configSystem = { }

configSystem.configFolder = window.name .. "/" .. tostring(game.PlaceId)
if (not isfolder(configSystem.configFolder)) then
    makefolder(configSystem.configFolder)
end

configSystem.sector = tab:CreateSector("Configs", side or "left")

local ConfigName = configSystem.sector:AddTextbox("Config Name", "", ConfigName, function() end, "")
local default = tostring(listfiles(configSystem.configFolder)[1] or ""):gsub(configSystem.configFolder .. "\\", ""):gsub(".txt", "")
local Config = configSystem.sector:AddDropdown("Configs", {}, default, false, function() end, "")
for i,v in pairs(listfiles(configSystem.configFolder)) do
    if v:find(".txt") then
        Config:Add(tostring(v):gsub(configSystem.configFolder .. "\\", ""):gsub(".txt", ""))
    end
end

configSystem.Create = configSystem.sector:AddButton("Create", function()
    for i,v in pairs(listfiles(configSystem.configFolder)) do
        Config:Remove(tostring(v):gsub(configSystem.configFolder .. "\\", ""):gsub(".txt", ""))
    end

    if ConfigName:Get() and ConfigName:Get() ~= "" then
        local config = {}

        for i,v in pairs(library.flags) do
            if (v ~= nil and v ~= "") then
                if (typeof(v) == "Color3") then
                    config[i] = { v.R, v.G, v.B }
                elseif (tostring(v):find("Enum.KeyCode")) then
                    config[i] = v.Name
                elseif (typeof(v) == "table") then
                    config[i] = { v }
                else
                    config[i] = v
                end
            end
        end

        writefile(configSystem.configFolder .. "/" .. ConfigName:Get() .. ".txt", httpservice:JSONEncode(config))

        for i,v in pairs(listfiles(configSystem.configFolder)) do
            if v:find(".txt") then
                Config:Add(tostring(v):gsub(configSystem.configFolder .. "\\", ""):gsub(".txt", ""))
            end
        end
    end
end)

configSystem.Save = configSystem.sector:AddButton("Save", function()
    local config = {}
    if Config:Get() and Config:Get() ~= "" then
        for i,v in pairs(library.flags) do
            if (v ~= nil and v ~= "") then
                if (typeof(v) == "Color3") then
                    config[i] = { v.R, v.G, v.B }
                elseif (tostring(v):find("Enum.KeyCode")) then
                    config[i] = "Enum.KeyCode." .. v.Name
                elseif (typeof(v) == "table") then
                    config[i] = { v }
                else
                    config[i] = v
                end
            end
        end

        writefile(configSystem.configFolder .. "/" .. Config:Get() .. ".txt", httpservice:JSONEncode(config))
    end
end)

configSystem.Load = configSystem.sector:AddButton("Load", function()
    local Success = pcall(readfile, configSystem.configFolder .. "/" .. Config:Get() .. ".txt")
    if (Success) then
        pcall(function() 
            local ReadConfig = httpservice:JSONDecode(readfile(configSystem.configFolder .. "/" .. Config:Get() .. ".txt"))
            local NewConfig = {}

            for i,v in pairs(ReadConfig) do
                if (typeof(v) == "table") then
                    if (typeof(v[1]) == "number") then
                        NewConfig[i] = Color3.new(v[1], v[2], v[3])
                    elseif (typeof(v[1]) == "table") then
                        NewConfig[i] = v[1]
                    end
                elseif (tostring(v):find("Enum.KeyCode.")) then
                    NewConfig[i] = Enum.KeyCode[tostring(v):gsub("Enum.KeyCode.", "")]
                else
                    NewConfig[i] = v
                end
            end

            library.flags = NewConfig

            for i,v in pairs(library.flags) do
                for i2,v2 in pairs(library.items) do
                    if (i ~= nil and i ~= "" and i ~= "Configs_Name" and i ~= "Configs" and v2.flag ~= nil) then
                        if (v2.flag == i) then
                            pcall(function() 
                                v2:Set(v)
                            end)
                        end
                    end
                end
            end
        end)
    end
end)

configSystem.Delete = configSystem.sector:AddButton("Delete", function()
    for i,v in pairs(listfiles(configSystem.configFolder)) do
        Config:Remove(tostring(v):gsub(configSystem.configFolder .. "\\", ""):gsub(".txt", ""))
    end

    if (not Config:Get() or Config:Get() == "") then return end
    if (not isfile(configSystem.configFolder .. "/" .. Config:Get() .. ".txt")) then return end
    delfile(configSystem.configFolder .. "/" .. Config:Get() .. ".txt")

    for i,v in pairs(listfiles(configSystem.configFolder)) do
        if v:find(".txt") then
            Config:Add(tostring(v):gsub(configSystem.configFolder .. "\\", ""):gsub(".txt", ""))
        end
    end
end)

return configSystem
